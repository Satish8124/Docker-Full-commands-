ðŸš€ Install Minikube on Ubuntu (Recommended Setup)
1. Update your system
sudo apt update -y
sudo apt upgrade -y

2. Install dependencies
[ sudo apt install -y curl wget apt-transport-https virtualbox virtualbox-ext-pack ]

3. Install kubectl (Kubernetes CLI)
[ curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x kubectl
sudo mv kubectl /usr/local/bin/
kubectl version --client ]

4. Install Minikube
[ curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
sudo dpkg -i minikube_latest_amd64.deb
minikube version ]

5. Start Minikube cluster
You can start Minikube with VirtualBox or Docker as your driver.
Option 1 â€“ Using VirtualBox
[ minikube start --driver=virtualbox ]

Option 2 â€“ Using Docker
(If you already have Docker installed)

[ minikube start --driver=docker ]
This will automatically create a single-node Kubernetes cluster inside a small VM managed by Minikube.

6. Verify Installation
[ kubectl get nodes ]

âœ… You should see:

NAME       STATUS   ROLES    AGE   VERSION
minikube   Ready    master   2m    v1.31.0

7. Access Minikube Dashboard
 [ minikube dashboard ]
Opens a browser-based Kubernetes Dashboard for visual management.



##### COMMANDS ######
1) [ minikube status ] -> it can be check the minikube server running are not when the minikube run means we can do any thing inside the kubernets.
2) [ minikube start ] -> it can be start the minikube server.
3) [ minikube stop ]-> it can be stop the minikube server.
4) [ kubectl create deployment NAME --image=imagename ] -> it can be create the deployment docker image inside the kubernetes cluster 
and create the pods and run the image. in  imagename must be the inside DOCKERHUB. first create the image and push into the docker hub and pull into the kubernetes cluster. 
5) [ kubectl expose deployment deploymentname --type=NodePort --port=80 ] -> it can be run the image into the browser in that we canm use the expose command.
6) [ kubectl service deploymentname ] -> when this command can run this can be open the running pods into the browser.
7) [ kubectl service deploymentname --url ] -> it can be print the url of running pord
8)
9)
10)
11)
12)
13)
14)
15)
